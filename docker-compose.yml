services:
  # PostgreSQL Database Service
  db:
    image: postgres:12
    container_name: psql.jobtracker.com
    hostname: psql.jobtracker.com
    restart: always
    environment:
      POSTGRES_DB: jobtracker
      POSTGRES_USER: apiuser
      POSTGRES_PASSWORD: '@p!u$$3r70K3n'
      PGDATA: /var/lib/postgresql/data
      POSTGRES_HOST_AUTH_METHOD: password
    expose:
      - "5432"
    volumes:
      - /var/lib/postgresql-docker/12/main:/var/lib/postgresql/data
      - ./docs/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      job_tracker_network:
        ipv4_address: 172.20.0.15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U apiuser -d jobtracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api.jobtracker.com
    hostname: api.jobtracker.com
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql://apiuser:%40p%21u%243r70K3n@psql.jobtracker.com:5432/jobtracker
      DATABASE_HOST: psql.jobtracker.com
      DATABASE_USER: apiuser
      DATABASE_PASS: '@p!u$$3r70K3n'
      DATABASE_DB: jobtracker
      DATABASE_PORT: 5432
      APP_NAME: Job Tracker API
      APP_VERSION: 1.0.0
      DEBUG: "true"
      ALLOWED_ORIGINS: '["http://localhost:3000", "http://portal.jobtracker.com:3000", "http://portal.jobtracker.com", "http://localhost:80", "http://localhost"]'
      RESUME_DIR: /app/job_docs/resumes
      COVER_LETTER_DIR: /app/job_docs/cover_letters
    expose:
      - "8000"
      - "80"
    ports:
      - "8000:8000"
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      job_tracker_network:
        ipv4_address: 172.20.0.10
    volumes:
      - job_docs:/app/job_docs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://api.jobtracker.com
    container_name: portal.jobtracker.com
    hostname: portal.jobtracker.com
    restart: unless-stopped
    environment:
      NODE_ENV: production
    expose:
      - "3000"
      - "443"
      - "80"
    ports:
      - "80:80"
    depends_on:
      - backend
      - db
    networks:
      job_tracker_network:
        ipv4_address: 172.20.0.5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  job_docs:
    driver: local
  backend:
    driver: local

# Custom network for service communication
networks:
  job_tracker_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
